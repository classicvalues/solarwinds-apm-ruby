# Copyright (c) 2021 SolarWinds, LLC.
# All rights reserved.

name: Ruby Tests

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: [3.0, 2.7, 2.6, 2.5, 2.4]
        gemfile:
          - libraries
          - unit
          - instrumentation_mocked
          - instrumentation_mocked_oldgems
          - frameworks
          - rails61
          - rails60
          - rails52
          - rails42
          - delayed_job
          - noop
        dbtype: [postgresql, mysql2]
        exclude:
          - ruby: 3.0
            gemfile: rails52
          - ruby: 3.0
            gemfile: rails42
          - ruby: 2.7
            gemfile: rails42
          - ruby: 2.6
            gemfile: rails42
          - ruby: 2.4
            gemfile: rails61
          - ruby: 2.4
            gemfile: rails60
          - ruby: 2.4  # excluding because of new sprockets version (4.0.0)
            gemfile: rails52

          - gemfile: unit
            dbtype: mysql2
          - gemfile: noop
            dbtype: mysql2
          - gemfile: libraries
            dbtype: mysql2
          - gemfile: instrumentation_mocked
            dbtype: mysql2
          - gemfile: instrumentation_mocked_oldgems
            dbtype: mysql2
          - gemfile: frameworks
            dbtype: mysql2
          - gemfile: delayed_job
            dbtype: mysql2

    container:
      image:  ruby:${{ matrix.ruby }}

    name: ${{ matrix.ruby }} - ${{ matrix.gemfile }}

    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile
      APPOPTICS_GEM_TEST: true
      APPOPTICS_REPORTER: file
      APPOPTICS_COLLECTOR: /tmp/appoptics_traces.bson
      APPOPTICS_MONGO_SERVER: "mongo"
      APPOPTICS_RABBITMQ_SERVER: "rabbitmq"
      APPOPTICS_MEMCACHED_SERVER: "memcached"
      APPOPTICS_REPORTER_FILE_SINGLE: false
      APPOPTICS_FROM_S3: true
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_HOST: "mysql"
      MYSQL_DATABASE: "travis_ci_test"
      POSTGRES_DB: "travis_ci_test"
      DOCKER_MYSQL_PASS: "admin"
      DOCKER_PSQL_PASS: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST: "postgres"
      REDIS_PASSWORD: "redis_pass"
    services:
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
        options: --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: "--health-cmd \"mongo --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'\" --health-interval 10s --health-timeout 5s --health-retries 5"
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mariadb:latest
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: travis_ci_test
          MYSQL_ROOT_PASSWORD: admin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: apt update && apt install -y --no-install-recommends bison libcurl4-gnutls-dev libsasl2-dev postgresql-client

      - name: Set database type env var
        run: export DBTYPE=${{ matrix.dbtype }}

      - name: Add javascript runtime
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | bash -
          apt-get install nodejs -y --no-install-recommends
#          curl -o- -L https://yarnpkg.com/install.sh | bash

      - name: Initialize services
#        env:
#          POSTGRES_HOST: postgres
        run: |
          export PGPASSWORD=$POSTGRES_PASSWORD; psql -c 'create database travis_ci_test;' -U postgres -h $POSTGRES_HOST
          curl -SL http://download.redis.io/releases/redis-4.0.0.tar.gz | tar xzC /tmp && cd /tmp/redis-4.0.0/ && make && make install && cd -
          redis-server --requirepass redis_pass &

      - name: Bundle with 1.17.3
        if: matrix.gemfile == 'rails42' || matrix.gemfile == 'frameworks'
        run: |
          gem install bundler:1.17.3
          export BUNDLE_GEMFILE=gemfiles/${{ matrix.gemfile }}.gemfile
          bundle _1.17.3_ install --jobs 4 --retry 3
      - name: Bundle
        if: matrix.gemfile != 'rails42' && matrix.gemfile != 'frameworks'
        run: |
          gem install bundler
          export BUNDLE_GEMFILE=gemfiles/${{ matrix.gemfile }}.gemfile
          bundle install --jobs 4 --retry 3

      - name: Install swig 4.0.2
        working-directory: .github/workflows/swig
        run: |
          tar -xf swig-v4.0.2.tar.gz -C /tmp
          cd /tmp/swig-4.0.2
          ./autogen.sh && ./configure && make && make install
          cd -

      - name: Compile c-extension
        run: |
          bundle exec rake fetch compile

      - name: Run tests
        run: bundle exec rake test
