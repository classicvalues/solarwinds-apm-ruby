FROM debian:buster

# docker build -f Dockerfile_ubuntu -t ruby_appoptics .

# docker-compose run --service-ports ruby_appoptics_apm /code/ruby-appoptics/read_travis_yml.rb [true]
# use true to start up conatiner and install oboe

# install OS packages
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        apt-utils \
          autoconf \
          autotools-dev \
          automake \
          bison \
          build-essential \
          cmake \
          curl \
          gdb \
          git-core \
          google-mock \
          less \
          libcurl4-gnutls-dev \
          libgtest-dev \
          libmysqlclient-dev \
          libpq-dev \
          libpcre3-dev \
          libreadline-dev \
          libsasl2-dev \
          libsqlite3-dev \
          libssl-dev \
          openjdk-8-jdk \
          pkg-config \
          psmisc \
          ruby \
          tcl \
          tmux \
          tree \
          vim \
          zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# gtest and gmock setup
RUN cd /usr/src/gtest && cmake CMakeLists.txt && make && cp *.a /usr/lib
RUN cd /usr/src/gmock && cmake CMakeLists.txt && make && cp *.a /usr/lib && cd

# rbenv setup
# use rbenv-default-gems to automatically install bundler for each ruby version
RUN  git clone https://github.com/rbenv/rbenv.git ~/.rbenv \
     && git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build \
     && git clone https://github.com/rbenv/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems \
     && echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.profile \
     && echo 'eval "$(rbenv init -)"' >> ~/.profile \
     && echo 'eval "$(rbenv init -)"' >> ~/.bashrc \
     && echo 'bundler' > ~/.rbenv/default-gems

RUN echo 'alias be="bundle exec"' >> ~/.bashrc
RUN echo 'alias be="bundle exec"' >> ~/.profile

# install rubies to build our gem against
RUN . ~/.profile \
    && cd /root/.rbenv/plugins/ruby-build && git pull && cd - \
#    && rbenv install 2.4.10 \
#    && rbenv install 2.5.8 \
#    && rbenv install 2.6.7 \
#    && rbenv install 2.7.3 \
    && rbenv install 3.0.1

# need to provide bundler 1.17.3 as well, because some gems require bundler < 2.0
#RUN . ~/.profile && rbenv local 2.4.10 && gem install bundler -v 1.17.3
#RUN . ~/.profile && rbenv local 2.5.8 && gem install bundler -v 1.17.3
#RUN . ~/.profile && rbenv local 2.6.7 && gem install bundler -v 1.17.3
#RUN . ~/.profile && rbenv local 2.7.3 && gem install bundler -v 1.17.3
RUN . ~/.profile && rbenv local 3.0.1 && gem install bundler -v 1.17.3

RUN echo 'gem: --no-document' >> ~/.gemrc

# install swig 4.0.2
RUN curl -SL https://github.com/swig/swig/archive/refs/tags/v4.0.2.tar.gz \
    | tar xzC /tmp \
    && cd /tmp/swig-4.0.2 \
    && ./autogen.sh && ./configure && make && make install \
    && cd - \
    && rm -rf /tmp/swig-4.0.2

# install redis-server version 4++
RUN curl -SL http://download.redis.io/releases/redis-4.0.0.tar.gz | tar xzC /tmp \
    && cd /tmp/redis-4.0.0/ \
    && make  && make install && cd -

# install postgres and memcached
#RUN apt-get update \
#    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#       memcached \
#       postgresql \
#       postgresql-contrib \
#    && service postgresql start \
#    && echo "psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\"" >> /tmp/config \
#    && echo "createdb -O docker travis_ci_test" >> /tmp/config \
#    && su postgres -c "bash /tmp/config" \
#    && rm -f /tmp/config

#RUN apt-get update && \
#	apt-get -y install memcached mysql-client libmysqlclient-dev

#RUN groupadd -r memcached && useradd --no-log-init

# install postgres and memcached
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
       memcached \
       postgresql \
       postgresql-contrib \
    && service postgresql start \
    && echo "psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\"" >> /tmp/config \
    && echo "createdb -O docker travis_ci_test" >> /tmp/config \
    && su postgres -c "bash /tmp/config" \
    && rm -f /tmp/config

RUN apt-get update && \
	apt-get -y install mysql-client libmysqlclient-dev

ENV PATH="/root/.rbenv/bin:/root/.rbenv/shims:$PATH"
ENV RUBY_ENV=test
ENV APPOPTICS_TOKEN_BUCKET_CAPACITY=10000
ENV APPOPTICS_TOKEN_BUCKET_RATE=10000

# replicate stdout of tests to file in local log directory
ENV TEST_RUNS_TO_FILE=true

CMD /bin/bash
